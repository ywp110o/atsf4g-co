[global]
zone_id = 1                  ; 逻辑大区ID
zone_start_time = 1466391600 ; 开服时间

group_id = 1                 ; 部署分组ID，和生成BUS ID有关，如果需要一台机器上部署多组环境，每组环境这里需要不一样
group_step = 65536           ; 0x10000, 生成BUS ID时执行 += 分组ID*group_step
type_step = 256              ; 0x100, 生成BUS ID时执行 += 进程类型ID*type_step
port_offset = 0              ; 全局端口号偏移，如果需要一台机器上部署多组环境，每组环境这里需要不一样

log_dir = ../log
# 逻辑日志级别(越大级别越低，DEBUG=6)
log_level = debug               ; (disable/disabled, fatal, error, warn/warning, info, notice, debug)

[atsystem]
stdout = true
shm_key_pool = 301989888        ; 0x12000000, 共享内存通道起始KEY，如果需要一台机器上部署多组环境，每组环境这里需要不一样
shm_channel_size = 16777216     ; 16MB 开发环境可以设成2MB以减少内存消耗，发布环境请改成16MB或8MB
iostream_channel_size = 2097152 ; 2MB
listen_port = 23000             ; 网络通道其实端口，如果需要一台机器上部署多组环境，每组环境这里需要不一样
hostname =                      ; 主机名称，每个物理机名称必须唯一，留空则系统自动取hostname
unix_sock_dir = ./              ; Unix sock地址的公共目录（如果支持Unix socks才有效）

[atservice]
atproxy = 0
atgateway = 1
echosvr = 17
loginsvr = 129
gamesvr = 130

[db]
cluster_default_host = 127.0.0.1:7001-7006
single_default_host = 127.0.0.1:6379


[gperftools]
profile_dir = profile ; 相对于安装目录
malloc = false ; 开启tcmalloc
cpu_profile = cpu.prof ; 开启cpu性能分析，并设置分析结果文件名
heap_check =  ;  [minimal, normal, strict, draconian] 内存泄露检测
heap_profile =  ;  是否开启堆内存泄露检测并设置分析结果文件名 (例如： heap.profile 注意: 堆性能监控会降低内存分配效率)


[jemalloc]
profile_dir = profile ; 相对于安装目录
malloc = true ; 开启jemalloc
heap_check = 0 ;  [2^n字节] 内存泄露检测, 比如 16
heap_profile = ;  是否开启堆内存泄露检测并设置分析结果文件名 (例如： heap.profile 注意: 堆性能监控会降低内存分配效率)
other_malloc_conf = stats_print:false,tcache:false

[valgrind]
profile_dir = profile ; 相对于安装目录
tool = ; memcheck, cachegrind, callgrind, helgrind etc. see man valgrind
option = 

[server.atproxy]
; ================ atproxy服务器配置 ================
etcd_hosts = http://127.0.0.1:2379
etcd_path = /atapp/proxy/services
number = 1
port = 21400
children_mask = 16

install_prefix = atframe/atproxy

[server.atgateway]
default_port = 20000                       ; base port if not specified
install_prefix = atframe/atgateway

index_type_number = 3
index_map_gamesvr = 0                      ; atgameway's = gamesvr index * 3 - 2(1 * 3 - 2 == 1)
index_map_loginsvr = 1
index_map_echosvr = 2

[server.echosvr]
number = 1

atgateway_port = 15310                     ; 这个端口号稍微大一点，小的端口号WSL环境会监听不成功
atgateway_listen_max_client = 65535
atgateway_listen_backlog = 128
atgateway_send_buffer_size = 1048576       ; 1MB send buffer limit
atgateway_reconnect_timeout = 180          ; reconnect timeout
atgateway_first_idle_timeout = 10          ; first idle timeout

[server.loginsvr]
number = 1

atgateway_port = 9000
atgateway_listen_max_client = 65535
atgateway_listen_backlog = 128
atgateway_send_buffer_size = 1048576       ; 1MB send buffer limit
atgateway_reconnect_timeout = 180          ; reconnect timeout
atgateway_first_idle_timeout = 10          ; first idle timeout

; gamesvr_addrs = 

[server.gamesvr]
number = 2

atgateway_port = 8000
atgateway_listen_max_client = 65535
atgateway_listen_backlog = 128
atgateway_send_buffer_size = 1048576       ; 1MB send buffer limit
atgateway_reconnect_timeout = 180          ; reconnect timeout
atgateway_first_idle_timeout = 10          ; first idle timeout