<%!
    import common.project_utils as project
%>
; =========== logic configure ===========
[logic]
zone.id = ${project.get_global_option('global', 'zone_id', 0)} ; zone id
zone.step = ${project.get_global_option('global', 'type_step', 256)} ; zone step

server.open_service_time = ${project.get_global_option('global', 'zone_start_time', 0)}            ; open time if server not serve client fow now
server.maintenance_mode = 0             ; maintenance mode
server.resource.dir = ${project_install_prefix}/resource    ; resource directory

player.max_online = 20000               ; max online number
player.default_openid = gm://system     ; default openid for system action

session.login_code_protect = 1200       ; protect time when login failed
session.login_code_valid_sec = 600      ; login code expire time
session.login_ban_time = 10800          ; ban time when login event
session.tick_sec = 60                   ; session event interval

task.stack.size = 524288                ; task stack size.(512KB)
task.csmsg.timeout = 8                  ; csmsg task timeout
task.nomsg.timeout = 1800               ; nomsg task timeout
task.paymsg.timeout = 300               ; paymsg task timeout

heartbeat.interval = 120                ; heartbeat interval
heartbeat.tolerance = 20                ; heartbeat network latency tolerance
heartbeat.error_times = 4               ; heartbeat error times to kickoff
heartbeat.ban_error_times = 3           ; heatbeat ban account of continue kickoff
heartbeat.ban_time_bound = 10800        ; heartbeat ban time

router.cache_update_interval = 1800     ; the interval to mark as expired for cache
router.cache_free_timeout = 600         ; timeout for removing cache if not visited
router.object_free_timeout = 1500       ; timeout for downgrade from object to cache if not visited
router.object_save_interval = 600       ; saving interval for object
router.retry_max_ttl = 3                ; retry times if do some actions failed
router.detault_timer_interval = 300     ; timer interval for checking the object or cache to see if it should be save, downgrade or removed
router.fast_timer_interval = 10         ; timer interval for checking the object or cache when it's busy when first checked